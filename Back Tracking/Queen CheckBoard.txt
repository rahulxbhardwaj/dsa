public class Main {

 public static boolean isSafe(char board[][], int row, int col) {
  // Up Vertical Check
  for (int j = row - 1; j >= 0; j--) {
   if (board[j][col] == 'Q') {
    return false;
   }
  }

  // Diagonal Left Check
  for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) {
   if (board[i][j] == 'Q') {
    return false;
   }
  }

  // Diagonal Right Check
  for (int i = row - 1, j = col + 1; i >= 0 && j < board.length; i--, j++) {
   if (board[i][j] == 'Q') {
    return false;
   }
  }

  return true;
 }

 public static void nQueens(char board[][], int row) {
  if (row == board.length) {
   printBoard(board);
   System.out.println("--- Chess Board ---");
   return;
  }
  for (int i = 0; i < board.length; i++) {
   if (isSafe(board, row, i)) {
    board[row][i] = 'Q';
    nQueens(board, row + 1);
    board[row][i] = 'X';
   }
  }
 }

 public static void printBoard(char board[][]) {
  for (int i = 0; i < board.length; i++) {
   for (int j = 0; j < board.length; j++) {
    System.out.print(board[i][j] + "     ");
   }
   System.out.println();
   System.out.println("---------");
  }
 }

 public static void main(String args[]) {
  int n = 4;
  char board[][] = new char[n][n];

  // Initialize
  for (int i = 0; i < n; i++) {
   for (int j = 0; j < n; j++) {
    board[i][j] = 'X';
   }
  }
  nQueens(board, 0);
 }
}
