public class Main {


 public static void printsol(int sol[][]){
  for(int i = 0 ; i< sol.length ; i++){
   for(int j = 0 ; j < sol.length ; j++){
    System.out.print(" "+sol[i][j]+" ");
   }
   System.out.println();
  }
 }

 public static boolean isSafe(int maze[][] , int row , int colm){
  return (row>=0 && row < maze.length && colm>=0 && colm < maze.length && maze[row][colm] == 1);
 }

 public static boolean solveMaze(int maze[][]){
  int N = maze.length;
  int sol[][] = new int[N][N];

  if(!solveMazeUtil(maze,0,0,sol)){
   System.out.println("Solution Does Not Exists");
   return false;
  }
//  print Solution
  printsol(sol);
  return true;

 }

 public static boolean solveMazeUtil(int maze[][] , int row , int colm ,int sol[][]){
if(row == maze.length-1 && colm == maze.length-1 && maze[row][colm] == 1){
 sol[row][colm] = 1;
 return true;
}

if(isSafe(maze, row, colm)){
 if(sol[row][colm] == 1){
  return false;
 }
 sol[row][colm] = 1;

 if(solveMazeUtil(maze, row+1, colm, sol)) {
  return true;
 }
if(solveMazeUtil(maze, row, colm+1, sol)){
 return true;
}
if(solveMazeUtil(maze,row-1,colm,sol)){
 return true;
}
if(solveMazeUtil(maze, row, colm-1, sol)){
 return true;
}
 sol[row][colm] = 0 ;
 return false;

}
return false;
 }

 public static void main(String[] args) {


int maze[][] = {{1,0,0,0},
                {1,1,0,1},
                {0,1,0,0},
                {1,1,1,1}};

  solveMaze(maze);


 }
