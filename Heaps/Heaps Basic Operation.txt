import java.util.ArrayList;

public class Main {

    static class heap{
        ArrayList<Integer> arr = new ArrayList<>();
        public void add(int data){
            //Add at last idx
            arr.add(data);

            int x = arr.size()-1; // x is child index
            int par = (x-1)/2; //Par index

            while(arr.get(x)  < arr.get(par)){
            //Swap
                int temp = arr.get(x);
                arr.set(x,arr.get(par));
                arr.set(par,temp);

                x = par;
                par = (x-1)/2;
            }
        }
        public int peek(){
            return arr.get(0);
        }

        private void Heapify(int i){
            int left = 2*i+1;
            int right = 2*i+2;
            int min = i;

            if(left < arr.size() && arr.get(min)  > arr.get(left)){
                min = left;
            }if(right < arr.size() && arr.get(min)  > arr.get(right)){
                min = right;
            }
            if(min != i){
                //Swap
                int temp = arr.get(i);
                arr.set(i,arr.get(min));
                arr.set(min,temp);

                Heapify(min);
            }

        }
        public int remove(){
            int data = arr.get(0);
            //Step 1 - Swap First & Last
            int temp = arr.get(0);
            arr.set(0,arr.get(arr.size()-1));
            arr.set(arr.size()-1,temp);
            //Step 2 - Delete Last
            arr.remove(arr.size()-1);
            //Step 3 - Heapify
            Heapify(0);
            return data;
        }
        public boolean isEmpty(){
            return arr.size() == 0 ;
        }
    }
 


    public static void main(String[] args) {
        heap h = new heap();
        h.add(3);
        h.add(4);
        h.add(5);
        h.add(1);
        while (!h.isEmpty()){
            System.out.println(h.peek());
            h.remove();
        }
    }
}