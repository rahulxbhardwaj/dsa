import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

public class practise{
    public static void printqueue(Queue<Integer> q){
        while (!q.isEmpty()){
            System.out.print(q.peek()+" ");
            q.remove();
        }
        System.out.println();
    }
    public static void Reversal(Queue<Integer> q){
        Stack<Integer> s = new Stack<>();
        if(q.isEmpty()){
            System.out.println("Queue is Empty");
        }
        while(!q.isEmpty()){
            s.push(q.remove());
        }
        while(!s.isEmpty()){
            q.add(s.pop());
        }

    }
    public static void main(String[] args) {
    Queue<Integer> s = new LinkedList<>();
    s.add(1);
    s.add(2);
    s.add(3);
    s.add(4);
    s.add(5);
//    printqueue(s);
    Reversal(s);
    printqueue(s);
    }
}