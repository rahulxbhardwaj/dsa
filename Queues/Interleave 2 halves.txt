import java.util.LinkedList;
import java.util.Queue;

public class practise{
    public static void printqueue(Queue<Integer> q){
        while (!q.isEmpty()){
            System.out.print(q.peek()+" ");
            q.remove();
        }
        System.out.println();
    }


    public static void InterLeave(Queue<Integer> s){
        int sizeHalf  = s.size()/2;
        Queue<Integer> tempOdd = new LinkedList<>();
        Queue<Integer> tempEven = new LinkedList<>();

        for(int i = 0 ; i < sizeHalf ; i++) {
            tempOdd.add(s.remove());
        }
        while(!s.isEmpty()){
            tempEven.add(s.remove());
        }
        int l = 0 , r = 0;
        while(!tempOdd.isEmpty() || !tempEven.isEmpty()){
            if(l >= r){
                System.out.print(tempOdd.remove() +" ");
                r=r+1;
            }else{
                System.out.print(tempEven.remove()+" ");
                l=l+1;
            }
        }
    }
    public static void main(String[] args) {
    Queue<Integer> s = new LinkedList<>();
    s.add(1);
    s.add(2);
    s.add(3);
    s.add(4);
    s.add(5);
    s.add(6);
    s.add(7);
    s.add(8);
    InterLeave(s);
    }
}