public class practise{
    public static class Node{
        int data;
        Node left;
        Node right;

        public Node(int data){
            this.data = data;
            left = null;
            right = null;
        }
    }
    public static int mindis(Node root , int n1){
        if(root == null){
            return -1;
        }
        if(root.data == n1){
            return 0;
        }
        int dis1 = mindis(root.left , n1);
        int dis2 = mindis(root.right , n1);

        if(dis1 == -1 && dis2 == -1){
            return -1;
        }
       if(dis1 == -1){
           return dis2+1;
       }else {
           return dis1+1;
       }
    }
    public static Node lca2(Node root , int n1 , int n2){
        if(root == null || root.data == n1 || root.data == n2){
            return root;
        }
        Node lcaleft = lca2(root.left , n1 , n2);
        Node lcaright = lca2(root.right , n1 , n2);

        if(lcaright == null){
            return lcaleft;
        }
        if(lcaleft == null){
            return lcaright;
        }
        return root;
    }
public static int distance(Node root , int n1 , int n2){
        Node lca = lca2(root,n1,n2);
        int dis1 = mindis(lca,n1);
        int dis2 = mindis(lca,n2);
        return dis1 + dis2 -1;
}


    public static void main(String[] args) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.right.left = new Node(6);
        root.right.right = new Node(7);
        System.out.println(distance(root,4,5));
    }
}